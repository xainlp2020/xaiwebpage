/**
 * Default options for EntityDispatcher behavior
 * such as whether `add()` is optimistic or pessimistic by default.
 * An optimistic save modifies the collection immediately and before saving to the server.
 * A pessimistic save modifies the collection after the server confirms the save was successful.
 * This class initializes the defaults to the safest values.
 * Provide an alternative to change the defaults for all entity collections.
 */
import * as ɵngcc0 from '@angular/core';
export declare class EntityDispatcherDefaultOptions {
    /** True if added entities are saved optimistically; false if saved pessimistically. */
    optimisticAdd: boolean;
    /** True if deleted entities are saved optimistically; false if saved pessimistically. */
    optimisticDelete: boolean;
    /** True if updated entities are saved optimistically; false if saved pessimistically. */
    optimisticUpdate: boolean;
    /** True if upsert entities are saved optimistically; false if saved pessimistically. */
    optimisticUpsert: boolean;
    /** True if entities in a cache saveEntities request are saved optimistically; false if saved pessimistically. */
    optimisticSaveEntities: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EntityDispatcherDefaultOptions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<EntityDispatcherDefaultOptions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWRpc3BhdGNoZXItZGVmYXVsdC1vcHRpb25zLmQudHMiLCJzb3VyY2VzIjpbImVudGl0eS1kaXNwYXRjaGVyLWRlZmF1bHQtb3B0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlZmF1bHQgb3B0aW9ucyBmb3IgRW50aXR5RGlzcGF0Y2hlciBiZWhhdmlvclxuICogc3VjaCBhcyB3aGV0aGVyIGBhZGQoKWAgaXMgb3B0aW1pc3RpYyBvciBwZXNzaW1pc3RpYyBieSBkZWZhdWx0LlxuICogQW4gb3B0aW1pc3RpYyBzYXZlIG1vZGlmaWVzIHRoZSBjb2xsZWN0aW9uIGltbWVkaWF0ZWx5IGFuZCBiZWZvcmUgc2F2aW5nIHRvIHRoZSBzZXJ2ZXIuXG4gKiBBIHBlc3NpbWlzdGljIHNhdmUgbW9kaWZpZXMgdGhlIGNvbGxlY3Rpb24gYWZ0ZXIgdGhlIHNlcnZlciBjb25maXJtcyB0aGUgc2F2ZSB3YXMgc3VjY2Vzc2Z1bC5cbiAqIFRoaXMgY2xhc3MgaW5pdGlhbGl6ZXMgdGhlIGRlZmF1bHRzIHRvIHRoZSBzYWZlc3QgdmFsdWVzLlxuICogUHJvdmlkZSBhbiBhbHRlcm5hdGl2ZSB0byBjaGFuZ2UgdGhlIGRlZmF1bHRzIGZvciBhbGwgZW50aXR5IGNvbGxlY3Rpb25zLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFbnRpdHlEaXNwYXRjaGVyRGVmYXVsdE9wdGlvbnMge1xuICAgIC8qKiBUcnVlIGlmIGFkZGVkIGVudGl0aWVzIGFyZSBzYXZlZCBvcHRpbWlzdGljYWxseTsgZmFsc2UgaWYgc2F2ZWQgcGVzc2ltaXN0aWNhbGx5LiAqL1xuICAgIG9wdGltaXN0aWNBZGQ6IGJvb2xlYW47XG4gICAgLyoqIFRydWUgaWYgZGVsZXRlZCBlbnRpdGllcyBhcmUgc2F2ZWQgb3B0aW1pc3RpY2FsbHk7IGZhbHNlIGlmIHNhdmVkIHBlc3NpbWlzdGljYWxseS4gKi9cbiAgICBvcHRpbWlzdGljRGVsZXRlOiBib29sZWFuO1xuICAgIC8qKiBUcnVlIGlmIHVwZGF0ZWQgZW50aXRpZXMgYXJlIHNhdmVkIG9wdGltaXN0aWNhbGx5OyBmYWxzZSBpZiBzYXZlZCBwZXNzaW1pc3RpY2FsbHkuICovXG4gICAgb3B0aW1pc3RpY1VwZGF0ZTogYm9vbGVhbjtcbiAgICAvKiogVHJ1ZSBpZiB1cHNlcnQgZW50aXRpZXMgYXJlIHNhdmVkIG9wdGltaXN0aWNhbGx5OyBmYWxzZSBpZiBzYXZlZCBwZXNzaW1pc3RpY2FsbHkuICovXG4gICAgb3B0aW1pc3RpY1Vwc2VydDogYm9vbGVhbjtcbiAgICAvKiogVHJ1ZSBpZiBlbnRpdGllcyBpbiBhIGNhY2hlIHNhdmVFbnRpdGllcyByZXF1ZXN0IGFyZSBzYXZlZCBvcHRpbWlzdGljYWxseTsgZmFsc2UgaWYgc2F2ZWQgcGVzc2ltaXN0aWNhbGx5LiAqL1xuICAgIG9wdGltaXN0aWNTYXZlRW50aXRpZXM6IGJvb2xlYW47XG59XG4iXX0=