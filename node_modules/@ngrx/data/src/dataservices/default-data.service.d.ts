import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Update } from '@ngrx/entity';
import { DefaultDataServiceConfig } from './default-data-service-config';
import { EntityCollectionDataService, HttpMethods, QueryParams } from './interfaces';
import { HttpUrlGenerator } from './http-url-generator';
/**
 * A basic, generic entity data service
 * suitable for persistence of most entities.
 * Assumes a common REST-y web API
 */
import * as ɵngcc0 from '@angular/core';
export declare class DefaultDataService<T> implements EntityCollectionDataService<T> {
    protected http: HttpClient;
    protected httpUrlGenerator: HttpUrlGenerator;
    protected _name: string;
    protected delete404OK: boolean;
    protected entityName: string;
    protected entityUrl: string;
    protected entitiesUrl: string;
    protected getDelay: number;
    protected saveDelay: number;
    protected timeout: number;
    get name(): string;
    constructor(entityName: string, http: HttpClient, httpUrlGenerator: HttpUrlGenerator, config?: DefaultDataServiceConfig);
    add(entity: T): Observable<T>;
    delete(key: number | string): Observable<number | string>;
    getAll(): Observable<T[]>;
    getById(key: number | string): Observable<T>;
    getWithQuery(queryParams: QueryParams | string): Observable<T[]>;
    update(update: Update<T>): Observable<T>;
    upsert(entity: T): Observable<T>;
    protected execute(method: HttpMethods, url: string, data?: any, // data, error, or undefined/null
    options?: any): Observable<any>;
    private handleError;
    private handleDelete404;
}
/**
 * Create a basic, generic entity data service
 * suitable for persistence of most entities.
 * Assumes a common REST-y web API
 */
export declare class DefaultDataServiceFactory {
    protected http: HttpClient;
    protected httpUrlGenerator: HttpUrlGenerator;
    protected config?: DefaultDataServiceConfig | undefined;
    constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator, config?: DefaultDataServiceConfig | undefined);
    /**
     * Create a default {EntityCollectionDataService} for the given entity type
     * @param entityName {string} Name of the entity type for this data service
     */
    create<T>(entityName: string): EntityCollectionDataService<T>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultDataServiceFactory, [null, null, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DefaultDataServiceFactory>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1kYXRhLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZGVmYXVsdC1kYXRhLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBVcGRhdGUgfSBmcm9tICdAbmdyeC9lbnRpdHknO1xuaW1wb3J0IHsgRGVmYXVsdERhdGFTZXJ2aWNlQ29uZmlnIH0gZnJvbSAnLi9kZWZhdWx0LWRhdGEtc2VydmljZS1jb25maWcnO1xuaW1wb3J0IHsgRW50aXR5Q29sbGVjdGlvbkRhdGFTZXJ2aWNlLCBIdHRwTWV0aG9kcywgUXVlcnlQYXJhbXMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgSHR0cFVybEdlbmVyYXRvciB9IGZyb20gJy4vaHR0cC11cmwtZ2VuZXJhdG9yJztcbi8qKlxuICogQSBiYXNpYywgZ2VuZXJpYyBlbnRpdHkgZGF0YSBzZXJ2aWNlXG4gKiBzdWl0YWJsZSBmb3IgcGVyc2lzdGVuY2Ugb2YgbW9zdCBlbnRpdGllcy5cbiAqIEFzc3VtZXMgYSBjb21tb24gUkVTVC15IHdlYiBBUElcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGVmYXVsdERhdGFTZXJ2aWNlPFQ+IGltcGxlbWVudHMgRW50aXR5Q29sbGVjdGlvbkRhdGFTZXJ2aWNlPFQ+IHtcbiAgICBwcm90ZWN0ZWQgaHR0cDogSHR0cENsaWVudDtcbiAgICBwcm90ZWN0ZWQgaHR0cFVybEdlbmVyYXRvcjogSHR0cFVybEdlbmVyYXRvcjtcbiAgICBwcm90ZWN0ZWQgX25hbWU6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgZGVsZXRlNDA0T0s6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGVudGl0eU5hbWU6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgZW50aXR5VXJsOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIGVudGl0aWVzVXJsOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIGdldERlbGF5OiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHNhdmVEZWxheTogbnVtYmVyO1xuICAgIHByb3RlY3RlZCB0aW1lb3V0OiBudW1iZXI7XG4gICAgZ2V0IG5hbWUoKTogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVudGl0eU5hbWU6IHN0cmluZywgaHR0cDogSHR0cENsaWVudCwgaHR0cFVybEdlbmVyYXRvcjogSHR0cFVybEdlbmVyYXRvciwgY29uZmlnPzogRGVmYXVsdERhdGFTZXJ2aWNlQ29uZmlnKTtcbiAgICBhZGQoZW50aXR5OiBUKTogT2JzZXJ2YWJsZTxUPjtcbiAgICBkZWxldGUoa2V5OiBudW1iZXIgfCBzdHJpbmcpOiBPYnNlcnZhYmxlPG51bWJlciB8IHN0cmluZz47XG4gICAgZ2V0QWxsKCk6IE9ic2VydmFibGU8VFtdPjtcbiAgICBnZXRCeUlkKGtleTogbnVtYmVyIHwgc3RyaW5nKTogT2JzZXJ2YWJsZTxUPjtcbiAgICBnZXRXaXRoUXVlcnkocXVlcnlQYXJhbXM6IFF1ZXJ5UGFyYW1zIHwgc3RyaW5nKTogT2JzZXJ2YWJsZTxUW10+O1xuICAgIHVwZGF0ZSh1cGRhdGU6IFVwZGF0ZTxUPik6IE9ic2VydmFibGU8VD47XG4gICAgdXBzZXJ0KGVudGl0eTogVCk6IE9ic2VydmFibGU8VD47XG4gICAgcHJvdGVjdGVkIGV4ZWN1dGUobWV0aG9kOiBIdHRwTWV0aG9kcywgdXJsOiBzdHJpbmcsIGRhdGE/OiBhbnksIC8vIGRhdGEsIGVycm9yLCBvciB1bmRlZmluZWQvbnVsbFxuICAgIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPGFueT47XG4gICAgcHJpdmF0ZSBoYW5kbGVFcnJvcjtcbiAgICBwcml2YXRlIGhhbmRsZURlbGV0ZTQwNDtcbn1cbi8qKlxuICogQ3JlYXRlIGEgYmFzaWMsIGdlbmVyaWMgZW50aXR5IGRhdGEgc2VydmljZVxuICogc3VpdGFibGUgZm9yIHBlcnNpc3RlbmNlIG9mIG1vc3QgZW50aXRpZXMuXG4gKiBBc3N1bWVzIGEgY29tbW9uIFJFU1QteSB3ZWIgQVBJXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERlZmF1bHREYXRhU2VydmljZUZhY3Rvcnkge1xuICAgIHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50O1xuICAgIHByb3RlY3RlZCBodHRwVXJsR2VuZXJhdG9yOiBIdHRwVXJsR2VuZXJhdG9yO1xuICAgIHByb3RlY3RlZCBjb25maWc/OiBEZWZhdWx0RGF0YVNlcnZpY2VDb25maWcgfCB1bmRlZmluZWQ7XG4gICAgY29uc3RydWN0b3IoaHR0cDogSHR0cENsaWVudCwgaHR0cFVybEdlbmVyYXRvcjogSHR0cFVybEdlbmVyYXRvciwgY29uZmlnPzogRGVmYXVsdERhdGFTZXJ2aWNlQ29uZmlnIHwgdW5kZWZpbmVkKTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBkZWZhdWx0IHtFbnRpdHlDb2xsZWN0aW9uRGF0YVNlcnZpY2V9IGZvciB0aGUgZ2l2ZW4gZW50aXR5IHR5cGVcbiAgICAgKiBAcGFyYW0gZW50aXR5TmFtZSB7c3RyaW5nfSBOYW1lIG9mIHRoZSBlbnRpdHkgdHlwZSBmb3IgdGhpcyBkYXRhIHNlcnZpY2VcbiAgICAgKi9cbiAgICBjcmVhdGU8VD4oZW50aXR5TmFtZTogc3RyaW5nKTogRW50aXR5Q29sbGVjdGlvbkRhdGFTZXJ2aWNlPFQ+O1xufVxuIl19